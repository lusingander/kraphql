type Query {
    argsId(id: ID): Foo
    argsString(name: String): Foo
    argsInt(value: Int): Foo
    argsFloat(rate: Float): Foo
    argsBoolean(isFoo: Boolean): Foo
    argsEnum(color: Color): Foo
    argsCustomScalar(my: MyScalar): Foo

    argsReturnsScalar(id: ID): Int
    argsReturnsCustomScalar(id: ID): MyScalar

    argsIdWithDefault(id: ID = "defaultId"): Foo
    argsStringWithDefault(name: String = "defaultName"): Foo
    argsIntWithDefault(value: Int = 100): Foo
    argsFloatWithDefault(rate: Float = 0.01): Foo
    argsBooleanWithDefault(isFoo: Boolean = false): Foo
    argsEnumWithDefault(color: Color = RED): Foo
    argsCustomScalarWithDefault(my: MyScalar = "defaultMyScalar"): Foo

    argsReturnsScalarWithDefault(id: ID = "defaultId"): Int
    argsReturnsCustomScalarWithDefault(id: ID = "defaultId"): MyScalar
}

type Foo {
    id: ID!
    name: String!
    value: Int!
    rate: Float!
    isFoo: Boolean!
    color: Color!
    my: MyScalar!
}

enum Color {
    RED
    BLUE
    GREEN
}

scalar MyScalar